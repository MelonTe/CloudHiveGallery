definitions:
  common.DeleteRequest:
    properties:
      id:
        example: ""
        type: string
    required:
    - id
    type: object
  common.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  entity.Picture:
    properties:
      category:
        type: string
      createTime:
        type: string
      editTime:
        type: string
      id:
        example: ""
        type: string
      introduction:
        type: string
      name:
        type: string
      picFormat:
        type: string
      picHeight:
        type: integer
      picScale:
        type: number
      picSize:
        type: integer
      picWidth:
        type: integer
      reviewMessage:
        type: string
      reviewStatus:
        type: integer
      reviewTime:
        type: string
      reviewerId:
        example: ""
        type: string
      tags:
        description: 存储的格式：["golang","java","c++"]
        type: string
      updateTime:
        type: string
      url:
        type: string
      userId:
        example: ""
        type: string
    type: object
  entity.User:
    properties:
      createTime:
        type: string
      editTime:
        type: string
      id:
        example: ""
        type: string
      updateTime:
        type: string
      userAccount:
        type: string
      userAvatar:
        type: string
      userName:
        type: string
      userPassword:
        type: string
      userProfile:
        type: string
      userRole:
        type: string
    type: object
  picture.ListPictureResponse:
    properties:
      current:
        description: 当前页数
        type: integer
      pages:
        description: 总页数
        type: integer
      records:
        items:
          $ref: '#/definitions/entity.Picture'
        type: array
      size:
        description: 页面大小
        type: integer
      total:
        description: 总记录数
        type: integer
    type: object
  picture.ListPictureVOResponse:
    properties:
      current:
        description: 当前页数
        type: integer
      pages:
        description: 总页数
        type: integer
      records:
        items:
          $ref: '#/definitions/picture.PictureVO'
        type: array
      size:
        description: 页面大小
        type: integer
      total:
        description: 总记录数
        type: integer
    type: object
  picture.PictureEditRequest:
    properties:
      category:
        type: string
      id:
        example: ""
        type: string
      introduction:
        type: string
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  picture.PictureQueryRequest:
    properties:
      category:
        type: string
      current:
        description: 当前页数
        type: integer
      id:
        description: 图片ID
        example: ""
        type: string
      introduction:
        type: string
      name:
        type: string
      pageSize:
        description: 页面大小
        type: integer
      picFormat:
        type: string
      picHeight:
        type: integer
      picScale:
        type: number
      picSize:
        type: integer
      picWidth:
        type: integer
      reviewMessage:
        type: string
      reviewStatus:
        description: 新增审核字段
        example: ""
        type: string
      reviewerId:
        description: 审核人ID
        example: ""
        type: string
      searchText:
        description: 搜索词
        type: string
      sortField:
        description: 排序字段
        type: string
      sortOrder:
        description: 排序顺序（默认升序）
        type: string
      tags:
        items:
          type: string
        type: array
      userId:
        description: 图片上传人信息
        example: ""
        type: string
    type: object
  picture.PictureReviewRequest:
    properties:
      id:
        description: 图片ID
        example: ""
        type: string
      reviewMessage:
        description: 审核信息
        type: string
      reviewStatus:
        description: 审核状态
        example: ""
        type: string
    type: object
  picture.PictureTagCategory:
    properties:
      categoryList:
        items:
          type: string
        type: array
      tagList:
        items:
          type: string
        type: array
    type: object
  picture.PictureUpdateRequest:
    properties:
      category:
        type: string
      id:
        example: ""
        type: string
      introduction:
        type: string
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  picture.PictureUploadByBatchRequest:
    properties:
      count:
        description: 图片数量
        type: integer
      namePrefix:
        description: 图片名称前缀，默认为SearchText
        type: string
      searchText:
        description: 搜索词
        type: string
    type: object
  picture.PictureUploadRequest:
    properties:
      fileUrl:
        description: 图片地址
        type: string
      id:
        description: 图片ID
        example: ""
        type: string
      picName:
        description: 图片名称
        type: string
    type: object
  picture.PictureVO:
    properties:
      category:
        type: string
      createTime:
        type: string
      editTime:
        type: string
      id:
        example: "0"
        type: string
      introduction:
        type: string
      name:
        type: string
      picFormat:
        type: string
      picHeight:
        type: integer
      picScale:
        type: number
      picSize:
        type: integer
      picWidth:
        type: integer
      tags:
        items:
          type: string
        type: array
      updateTime:
        type: string
      url:
        type: string
      user:
        $ref: '#/definitions/user.UserVO'
      userId:
        example: "0"
        type: string
    type: object
  user.ListUserVOResponse:
    properties:
      current:
        description: 当前页数
        type: integer
      pages:
        description: 总页数
        type: integer
      records:
        items:
          $ref: '#/definitions/user.UserVO'
        type: array
      size:
        description: 页面大小
        type: integer
      total:
        description: 总记录数
        type: integer
    type: object
  user.UserAddRequest:
    properties:
      userAccount:
        description: 用户账号
        type: string
      userAvatar:
        description: 用户头像
        type: string
      userName:
        description: 用户昵称
        type: string
      userProfile:
        description: 用户简介
        type: string
      userRole:
        description: 用户权限
        type: string
    required:
    - userAccount
    type: object
  user.UserLoginRequest:
    properties:
      userAccount:
        type: string
      userPassword:
        type: string
    required:
    - userAccount
    - userPassword
    type: object
  user.UserLoginVO:
    properties:
      createTime:
        type: string
      editTime:
        type: string
      id:
        example: ""
        type: string
      updateTime:
        type: string
      userAccount:
        type: string
      userAvatar:
        type: string
      userName:
        type: string
      userProfile:
        type: string
      userRole:
        type: string
    type: object
  user.UserQueryRequest:
    properties:
      current:
        description: 当前页数
        type: integer
      id:
        description: 用户ID
        example: ""
        type: string
      pageSize:
        description: 页面大小
        type: integer
      sortField:
        description: 排序字段
        type: string
      sortOrder:
        description: 排序顺序（默认升序）
        type: string
      userAccount:
        description: 用户账号
        type: string
      userName:
        description: 用户昵称
        type: string
      userProfile:
        description: 用户简介
        type: string
      userRole:
        description: 用户权限
        type: string
    type: object
  user.UserRegsiterRequest:
    properties:
      checkPassword:
        type: string
      userAccount:
        type: string
      userPassword:
        type: string
    required:
    - checkPassword
    - userAccount
    - userPassword
    type: object
  user.UserUpdateRequest:
    properties:
      id:
        description: 用户ID
        example: ""
        type: string
      userAvatar:
        description: 用户头像
        type: string
      userName:
        description: 用户昵称
        type: string
      userProfile:
        description: 用户简介
        type: string
      userRole:
        description: 用户权限
        type: string
    type: object
  user.UserVO:
    properties:
      createTime:
        type: string
      id:
        example: ""
        type: string
      userAccount:
        type: string
      userAvatar:
        type: string
      userName:
        type: string
      userProfile:
        type: string
      userRole:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 云巢画廊接口文档
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CloudHiveGallery
  version: "1.0"
paths:
  /v1/file/test/download:
    get:
      parameters:
      - description: 文件存储在 COS 的 KEY
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 返回文件流
          schema:
            type: file
        "400":
          description: 下载失败，详情见响应中的 code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 测试文件下载接口「管理员」
      tags:
      - file
  /v1/file/test/upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: 响应文件存储在COS的KEY
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 测试文件上传接口「管理员」
      tags:
      - file
  /v1/picture/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: 图片的ID
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/common.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 删除失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据ID软删除图片
      tags:
      - picture
  /v1/picture/edit:
    post:
      consumes:
      - application/json
      description: 若图片不存在，则返回false
      parameters:
      - description: 需要更新的图片信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureEditRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 更新图片
      tags:
      - picture
  /v1/picture/get:
    get:
      consumes:
      - application/json
      parameters:
      - description: 图片的ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.Picture'
              type: object
        "400":
          description: 获取失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据ID获取图片「管理员」
      tags:
      - picture
  /v1/picture/get/vo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 图片的ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/picture.PictureVO'
              type: object
        "400":
          description: 获取失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据ID获取脱敏的图片
      tags:
      - picture
  /v1/picture/list/page:
    post:
      consumes:
      - application/json
      parameters:
      - description: 需要查询的页数、以及图片关键信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/picture.ListPictureResponse'
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 分页获取一系列图片信息「管理员」
      tags:
      - picture
  /v1/picture/list/page/vo:
    post:
      consumes:
      - application/json
      parameters:
      - description: 需要查询的页数、以及图片关键信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/picture.ListPictureVOResponse'
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 分页获取一系列图片信息
      tags:
      - picture
  /v1/picture/review:
    post:
      consumes:
      - application/json
      parameters:
      - description: 审核图片所需信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 审核更新成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 执行图片审核「管理员」
      tags:
      - picture
  /v1/picture/tag_category:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/picture.PictureTagCategory'
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 获取图片的标签和分类（固定）
      tags:
      - picture
  /v1/picture/update:
    post:
      consumes:
      - application/json
      description: 若图片不存在，则返回false
      parameters:
      - description: 需要更新的图片信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 更新图片
      tags:
      - picture
  /v1/picture/upload:
    post:
      consumes:
      - multipart/form-data
      description: 根据是否存在ID来上传图片或者修改图片信息，返回图片信息视图
      parameters:
      - description: 图片
        in: formData
        name: file
        required: true
        type: file
      - description: 图片的ID，非必需
        in: formData
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功，返回图片信息视图
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/picture.PictureVO'
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 上传图片接口「需要登录校验」
      tags:
      - picture
  /v1/picture/upload/batch:
    post:
      consumes:
      - application/json
      parameters:
      - description: 图片的关键词
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureUploadByBatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 返回抓取图片数量
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: integer
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 批量抓取图片「管理员」
      tags:
      - picture
  /v1/picture/upload/url:
    post:
      consumes:
      - application/json
      parameters:
      - description: 图片URL
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/picture.PictureUploadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功，返回图片信息视图
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/picture.PictureVO'
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据URL上传图片接口「需要登录校验」
      tags:
      - picture
  /v1/user/add:
    post:
      consumes:
      - application/json
      description: 默认密码为12345678
      parameters:
      - description: 用户添加申请参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 添加成功，返回添加用户的ID
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 添加失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 创建一个用户「管理员」
      tags:
      - user
  /v1/user/delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户的ID
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/common.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 删除失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据ID软删除用户「管理员」
      tags:
      - user
  /v1/user/get:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户的ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功，返回用户的所有信息
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.User'
              type: object
        "400":
          description: 查询失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据ID获取用户「管理员」
      tags:
      - user
  /v1/user/get/login:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: 获取用户视图成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserLoginVO'
              type: object
        "400":
          description: 获取失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 获取登录的用户信息
      tags:
      - user
  /v1/user/get/vo:
    get:
      consumes:
      - application/json
      parameters:
      - description: 用户的ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功，返回用户的脱敏信息
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserVO'
              type: object
        "400":
          description: 查询失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 根据ID获取简略信息用户
      tags:
      - user
  /v1/user/list/page/vo:
    post:
      consumes:
      - application/json
      description: 根据用户关键信息进行模糊查询
      parameters:
      - description: 需要查询的页数、以及用户关键信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.ListUserVOResponse'
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 分页获取一系列用户信息「管理员」
      tags:
      - user
  /v1/user/login:
    post:
      consumes:
      - application/json
      description: 根据账号密码进行登录
      parameters:
      - description: 用户登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回用户视图
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  $ref: '#/definitions/user.UserLoginVO'
              type: object
        "400":
          description: 登录失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 用户登录
      tags:
      - user
  /v1/user/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: 退出成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 注册失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 执行用户注销（退出）
      tags:
      - user
  /v1/user/register:
    post:
      consumes:
      - application/json
      description: 根据账号密码进行注册
      parameters:
      - description: 用户请求注册参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserRegsiterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 注册成功，返回注册用户的ID
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 注册失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 注册用户
      tags:
      - user
  /v1/user/update:
    post:
      consumes:
      - application/json
      description: 若用户不存在，则返回失败
      parameters:
      - description: 需要更新的用户信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/common.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: 更新失败，详情见响应中的code
          schema:
            $ref: '#/definitions/common.Response'
      summary: 更新用户信息「管理员」
      tags:
      - user
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
